name: Build and Push Multi-Arch Image to ECR

on:
  push:
    branches: [ "test" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: testing

    env:
      MY_APP: my-app  # Define my-app as an environment variable
      MANIFEST_BRANCH: python-app # branch where manifest exist

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: ecr-login
        run: |
          echo "Logging in to ECR..."
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com"

      - name: Set Timestamp Tag
        run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Build and Push Multi-Arch Image
        uses: docker/build-push-action@v4
        with:
          context: ./test-python-app               # Set context to the correct subdirectory
          file: ./test-python-app/Dockerfile  # Specify custom Dockerfile path if needed
          push: true
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/test:${{ env.TIMESTAMP }}
          outputs: type=image
        env:
          DOCKER_BUILDKIT: 1  # Enable BuildKit for multi-arch builds

      - name: Switch to my-app Branch
        run: |
          git fetch origin ${{ env.MANIFEST_BRANCH }}
          git checkout ${{ env.MANIFEST_BRANCH }}
      
      - name: Set Git User
        run: |
          git config --local user.email "deepakkumar21158@gmail.com"  # Replace with your email
          git config --local user.name "19deepak98"   

      - name: Update values.yaml with New Tag
        run: |
          sed -i "s|tag: .*|tag: \"${{ env.TIMESTAMP }}\"|" ./${{ env.MY_APP }}/values.yaml
          git add ./${{ env.MY_APP }}/values.yaml
          git commit -m "Update image tag to ${{ env.TIMESTAMP }}"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/19deepak98/docs.git ${{ env.MANIFEST_BRANCH }}

      - name: Logout from ECR
        run: |
          echo "Logging out from ECR..."
          docker logout "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com"

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: Update ArgoCD Application
        run: |
          argocd login a6e8b7620f8164ad9b61fcc507e3bdee-1222634393.ap-south-1.elb.amazonaws.com --username admin --password "${{ secrets.ARGO_PASSWORD }}" --insecure
          argocd app set ${{ env.MY_APP }} \
            -p image.tag=${{ env.TIMESTAMP }} \
            --values-literal-file ./my-app/values.yaml
          argocd app actions run ${{ env.MY_APP }} restart --kind Deployment --all
